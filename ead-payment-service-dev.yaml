server:
  port: 8086
  servlet:
    context-path: '/ead-payment/'

spring:
  application:
    name: ead-payment-service
  datasource:
    url:  jdbc:postgresql://localhost:5432/ead-payment
    username: postgres
    password: 123
  jpa:
    hibernate:
      ddl-auto: update
      dialect: org.hibernate.dialect.PostgreSQLDialect
      jdbc:
        lob.non-contextual-creation: true
    properties:
      hibernate:
        show_sql: true
  output:
    ansi:
      enabled: Always
  rabbitmq:
    addresses: amqps://hvyuqppf:Ay-qBRI53ggIuB0nBqG-44-pAurb9RY0@woodpecker.rmq.cloudamqp.com/hvyuqppf

logging:
  level:
    com.ead: TRACE
    root: INFO
    org.springframework.web: DEBUG
    org.hibernate: INFO

ead:
  broker:
    exchange:
      userEventExchange: ead.userevent
      paymentCommandExchange: ead.paymentcommand
      paymentEventExchange: ead.paymentevent
    queue:
      userEventQueue:
        name: ead.userevent.ms.payment
      paymentCommandQueue:
       name: ead.paymentcommand.ms.payment
    key:
      paymentCommandKey: ms.payment
  stripe:
    secretKey: '{cipher}0d6dfc1c4399709491e90488187ff618fb66afcce3760fd1930f26c0321043c1e556ca6e9084c56d0aaee2d3d7339e2606915becf87d310ae5d8f80b7f044a5f2dfb5cdc06f6f2bc8e065b8e099f9c9afc2ec2675e7d36bc106719e7a7a76d5190eb378659cd28c89a3eeb0b1b8b4b63f72dcc85cefb190388c04dc6caed4945'


management:
  endpoints:
    web:
      exposure:
        include:
          - refresh
          - health

